{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\AlgorithmVisualizer\\\\src\\\\sortComponents\\\\menu.jsx\";\n// import React, {Component} from 'react';\n// import DiscreteSlider from \"./slider\";\n// import SimpleSelect from \"./simpleSelect\";\n// import SwitchLabels from \"./formControlLabel\";\n// import InputComponent from \"./InputComponent\";\n//\n//\n// class Menu extends Component {\n//     render() {\n//         return (\n//             <nav className=\"nav alert-dark\">\n//                 <button\n//                     className='btn btn-secondary m-2'\n//                     onClick={this.props.onRandomize}\n//                     disabled={this.props.disable}\n//                     style={this.isClickable()}\n//                 >\n//                     Randomize\n//                 </button>\n//                 <DiscreteSlider\n//                     default={20}\n//                     min={10}\n//                     max={100}\n//                     step={10}\n//                     title=\"Numbers\"\n//                     onCountChange={this.props.onCountChange}\n//                     disable={this.props.disable}\n//                 />\n//                 <DiscreteSlider\n//                     default={30}\n//                     min={10}\n//                     max={100}\n//                     step={1}\n//                     title=\"Speed\"\n//                     onCountChange={this.props.onSpeedChange}\n//                     disable={false}\n//                 />\n//                 <SimpleSelect\n//                     pos={0}\n//                     onAlgoChanged={this.props.onAlgoChanged}\n//                 />\n//                 <SwitchLabels\n//                     disable={this.props.disable}\n//                     onDoubleChange={this.props.onDoubleChange}\n//                 />\n//                 <SimpleSelect\n//                     pos={1}\n//                     onAlgoChanged={this.props.onAlgoChanged}\n//                 />\n//\n//                 <button\n//                     className='btn btn-warning btn-lg '\n//                     onClick={this.props.onViusalize}\n//                     disabled={this.props.disable}\n//                     style={this.isClickable()}\n//                 >\n//                     Visualize\n//                 </button>\n//                 <InputComponent\n//                     onInputChange={this.handleInputChange} // Pass down an event handler to receive input values\n//                 />\n//                 <button className='btn btn-secondary m-2' onClick={this.props.handleCreate}\n//                         disabled={this.props.disable}\n//                         style={this.isClickable()}\n//                 >\n//                     Create\n//                 </button> {/* Add click event handler */}\n//\n//\n//             </nav>\n//         );\n//     }\n//     isClickable = () =>{\n//         if( this.props.disable){\n//             return {cursor: \"not-allowed\"};\n//         } else{\n//             return {};\n//         }\n//     }\n// }\n//\n//\n// export default Menu;\n\nimport React, { Component } from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport SwitchLabels from \"./formControlLabel\";\nimport InputComponent from \"./InputComponent\";\nimport BubbleSortVisualizer from \"./BubbleSortVisualizer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleExplanation = () => {\n      this.setState(prevState => ({\n        showExplanation: !prevState.showExplanation\n      }));\n    };\n    this.isClickable = () => {\n      if (this.props.disable) {\n        return {\n          cursor: \"not-allowed\"\n        };\n      } else {\n        return {};\n      }\n    };\n    this.state = {\n      showExplanation: false // Add a state to toggle the explanation\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <nav className=\"nav alert-dark\">\n      //\n      //     {/* Add a button to toggle the explanation */}\n      //     <button\n      //                             className='btn btn-secondary m-2'\n      //                             onClick={this.props.onRandomize}\n      //                             disabled={this.props.disable}\n      //                             style={this.isClickable()}\n      //                         >\n      //                             Randomize\n      //                         </button>\n      //                         <DiscreteSlider\n      //                             default={20}\n      //                             min={10}\n      //                             max={100}\n      //                             step={10}\n      //                             title=\"Numbers\"\n      //                             onCountChange={this.props.onCountChange}\n      //                             disable={this.props.disable}\n      //                         />\n      //                         <DiscreteSlider\n      //                             default={30}\n      //                             min={10}\n      //                             max={100}\n      //                             step={1}\n      //                             title=\"Speed\"\n      //                             onCountChange={this.props.onSpeedChange}\n      //                             disable={false}\n      //                         />\n      //                         <SimpleSelect\n      //                             pos={0}\n      //                             onAlgoChanged={this.props.onAlgoChanged}\n      //                         />\n      //                         <SwitchLabels\n      //                             disable={this.props.disable}\n      //                             onDoubleChange={this.props.onDoubleChange}\n      //                         />\n      //                         <SimpleSelect\n      //                             pos={1}\n      //                             onAlgoChanged={this.props.onAlgoChanged}\n      //                         />\n      //\n      //                         <button\n      //                             className='btn btn-warning btn-lg '\n      //                             onClick={this.props.onViusalize}\n      //                             disabled={this.props.disable}\n      //                             style={this.isClickable()}\n      //                         >\n      //                             Visualize\n      //                         </button>\n      //                         <InputComponent\n      //                             onInputChange={this.handleInputChange} // Pass down an event handler to receive input values\n      //                         />\n      //                         <button className='btn btn-secondary m-2' onClick={this.props.handleCreate}\n      //                                 disabled={this.props.disable}\n      //                                 style={this.isClickable()}\n      //                         >\n      //                             Create\n      //                         </button> {/* Add click event handler */}\n      //\n      //\n      //\n      //\n      //     <button\n      //         className='btn btn-info m-2'\n      //         onClick={this.toggleExplanation}\n      //         style={{float: 'right'}}\n      //     >\n      //         {this.state.showExplanation ? 'Hide Explanation' : 'Show Explanation'}\n      //     </button>\n      //\n      //     {/* Render the explanation if showExplanation state is true */}\n      //     {this.state.showExplanation && (\n      //         <div className=\"alert alert-info m-2\">\n      //             <h4>Working Visualizer Explanation</h4>\n      //             <p>\n      //                 Add your explanation of how the visualizer works here. You can provide details about the\n      //                 algorithms used, the data being visualized, and any other relevant information to help users\n      //                 understand how the visualizer works.\n      //             </p>\n      //         </div>\n      //     )}\n      //\n      //     {/* Rest of the component's JSX */}\n      //     {/* ... */}\n      // </nav>\n      _jsxDEV(BubbleSortVisualizer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)\n    );\n  }\n}\nexport default Menu;","map":{"version":3,"names":["React","Component","DiscreteSlider","SimpleSelect","SwitchLabels","InputComponent","BubbleSortVisualizer","jsxDEV","_jsxDEV","Menu","constructor","props","toggleExplanation","setState","prevState","showExplanation","isClickable","disable","cursor","state","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Lenovo/Desktop/AlgorithmVisualizer/src/sortComponents/menu.jsx"],"sourcesContent":["// import React, {Component} from 'react';\r\n// import DiscreteSlider from \"./slider\";\r\n// import SimpleSelect from \"./simpleSelect\";\r\n// import SwitchLabels from \"./formControlLabel\";\r\n// import InputComponent from \"./InputComponent\";\r\n//\r\n//\r\n// class Menu extends Component {\r\n//     render() {\r\n//         return (\r\n//             <nav className=\"nav alert-dark\">\r\n//                 <button\r\n//                     className='btn btn-secondary m-2'\r\n//                     onClick={this.props.onRandomize}\r\n//                     disabled={this.props.disable}\r\n//                     style={this.isClickable()}\r\n//                 >\r\n//                     Randomize\r\n//                 </button>\r\n//                 <DiscreteSlider\r\n//                     default={20}\r\n//                     min={10}\r\n//                     max={100}\r\n//                     step={10}\r\n//                     title=\"Numbers\"\r\n//                     onCountChange={this.props.onCountChange}\r\n//                     disable={this.props.disable}\r\n//                 />\r\n//                 <DiscreteSlider\r\n//                     default={30}\r\n//                     min={10}\r\n//                     max={100}\r\n//                     step={1}\r\n//                     title=\"Speed\"\r\n//                     onCountChange={this.props.onSpeedChange}\r\n//                     disable={false}\r\n//                 />\r\n//                 <SimpleSelect\r\n//                     pos={0}\r\n//                     onAlgoChanged={this.props.onAlgoChanged}\r\n//                 />\r\n//                 <SwitchLabels\r\n//                     disable={this.props.disable}\r\n//                     onDoubleChange={this.props.onDoubleChange}\r\n//                 />\r\n//                 <SimpleSelect\r\n//                     pos={1}\r\n//                     onAlgoChanged={this.props.onAlgoChanged}\r\n//                 />\r\n//\r\n//                 <button\r\n//                     className='btn btn-warning btn-lg '\r\n//                     onClick={this.props.onViusalize}\r\n//                     disabled={this.props.disable}\r\n//                     style={this.isClickable()}\r\n//                 >\r\n//                     Visualize\r\n//                 </button>\r\n//                 <InputComponent\r\n//                     onInputChange={this.handleInputChange} // Pass down an event handler to receive input values\r\n//                 />\r\n//                 <button className='btn btn-secondary m-2' onClick={this.props.handleCreate}\r\n//                         disabled={this.props.disable}\r\n//                         style={this.isClickable()}\r\n//                 >\r\n//                     Create\r\n//                 </button> {/* Add click event handler */}\r\n//\r\n//\r\n//             </nav>\r\n//         );\r\n//     }\r\n//     isClickable = () =>{\r\n//         if( this.props.disable){\r\n//             return {cursor: \"not-allowed\"};\r\n//         } else{\r\n//             return {};\r\n//         }\r\n//     }\r\n// }\r\n//\r\n//\r\n// export default Menu;\r\n\r\nimport React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\nimport InputComponent from \"./InputComponent\";\r\nimport BubbleSortVisualizer from \"./BubbleSortVisualizer\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExplanation: false // Add a state to toggle the explanation\r\n        };\r\n    }\r\n\r\n    toggleExplanation = () => {\r\n        this.setState(prevState => ({\r\n            showExplanation: !prevState.showExplanation\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            // <nav className=\"nav alert-dark\">\r\n            //\r\n            //     {/* Add a button to toggle the explanation */}\r\n            //     <button\r\n            //                             className='btn btn-secondary m-2'\r\n            //                             onClick={this.props.onRandomize}\r\n            //                             disabled={this.props.disable}\r\n            //                             style={this.isClickable()}\r\n            //                         >\r\n            //                             Randomize\r\n            //                         </button>\r\n            //                         <DiscreteSlider\r\n            //                             default={20}\r\n            //                             min={10}\r\n            //                             max={100}\r\n            //                             step={10}\r\n            //                             title=\"Numbers\"\r\n            //                             onCountChange={this.props.onCountChange}\r\n            //                             disable={this.props.disable}\r\n            //                         />\r\n            //                         <DiscreteSlider\r\n            //                             default={30}\r\n            //                             min={10}\r\n            //                             max={100}\r\n            //                             step={1}\r\n            //                             title=\"Speed\"\r\n            //                             onCountChange={this.props.onSpeedChange}\r\n            //                             disable={false}\r\n            //                         />\r\n            //                         <SimpleSelect\r\n            //                             pos={0}\r\n            //                             onAlgoChanged={this.props.onAlgoChanged}\r\n            //                         />\r\n            //                         <SwitchLabels\r\n            //                             disable={this.props.disable}\r\n            //                             onDoubleChange={this.props.onDoubleChange}\r\n            //                         />\r\n            //                         <SimpleSelect\r\n            //                             pos={1}\r\n            //                             onAlgoChanged={this.props.onAlgoChanged}\r\n            //                         />\r\n            //\r\n            //                         <button\r\n            //                             className='btn btn-warning btn-lg '\r\n            //                             onClick={this.props.onViusalize}\r\n            //                             disabled={this.props.disable}\r\n            //                             style={this.isClickable()}\r\n            //                         >\r\n            //                             Visualize\r\n            //                         </button>\r\n            //                         <InputComponent\r\n            //                             onInputChange={this.handleInputChange} // Pass down an event handler to receive input values\r\n            //                         />\r\n            //                         <button className='btn btn-secondary m-2' onClick={this.props.handleCreate}\r\n            //                                 disabled={this.props.disable}\r\n            //                                 style={this.isClickable()}\r\n            //                         >\r\n            //                             Create\r\n            //                         </button> {/* Add click event handler */}\r\n            //\r\n            //\r\n            //\r\n            //\r\n            //     <button\r\n            //         className='btn btn-info m-2'\r\n            //         onClick={this.toggleExplanation}\r\n            //         style={{float: 'right'}}\r\n            //     >\r\n            //         {this.state.showExplanation ? 'Hide Explanation' : 'Show Explanation'}\r\n            //     </button>\r\n            //\r\n            //     {/* Render the explanation if showExplanation state is true */}\r\n            //     {this.state.showExplanation && (\r\n            //         <div className=\"alert alert-info m-2\">\r\n            //             <h4>Working Visualizer Explanation</h4>\r\n            //             <p>\r\n            //                 Add your explanation of how the visualizer works here. You can provide details about the\r\n            //                 algorithms used, the data being visualized, and any other relevant information to help users\r\n            //                 understand how the visualizer works.\r\n            //             </p>\r\n            //         </div>\r\n            //     )}\r\n            //\r\n            //     {/* Rest of the component's JSX */}\r\n            //     {/* ... */}\r\n            // </nav>\r\n            <BubbleSortVisualizer/>\r\n\r\n        );\r\n    }\r\n\r\n    isClickable = () => {\r\n        if (this.props.disable) {\r\n            return {cursor: \"not-allowed\"};\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,cAAc,MAAM,UAAU;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,SAASR,SAAS,CAAC;EACzBS,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAMjBC,iBAAiB,GAAG,MAAM;MACtB,IAAI,CAACC,QAAQ,CAACC,SAAS,KAAK;QACxBC,eAAe,EAAE,CAACD,SAAS,CAACC;MAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,KAgGDC,WAAW,GAAG,MAAM;MAChB,IAAI,IAAI,CAACL,KAAK,CAACM,OAAO,EAAE;QACpB,OAAO;UAACC,MAAM,EAAE;QAAa,CAAC;MAClC,CAAC,MAAM;QACH,OAAO,CAAC,CAAC;MACb;IACJ,CAAC;IA/GG,IAAI,CAACC,KAAK,GAAG;MACTJ,eAAe,EAAE,KAAK,CAAC;IAC3B,CAAC;EACL;;EAQAK,MAAMA,CAAA,EAAG;IACL;MAAA;MAEI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAZ,OAAA,CAACF,oBAAoB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;EAG/B;AASJ;AAEA,eAAef,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}