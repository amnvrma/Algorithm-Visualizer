{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\AlgorithmVisualizer\\\\src\\\\sortComponents\\\\menu.jsx\";\nimport React, { Component } from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport SwitchLabels from \"./formControlLabel\";\nimport InputComponent from \"./InputComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleExplanation = () => {\n      this.setState(prevState => ({\n        showExplanation: !prevState.showExplanation\n      }));\n    };\n    this.isClickable = () => {\n      if (this.props.disable) {\n        return {\n          cursor: \"not-allowed\"\n        };\n      } else {\n        return {};\n      }\n    };\n    this.state = {\n      showExplanation: false // Add a state to toggle the explanation\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav alert-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info m-2\",\n        onClick: this.toggleExplanation,\n        style: {\n          float: 'right'\n        },\n        children: this.state.showExplanation ? 'Hide Explanation' : 'Show Explanation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), this.state.showExplanation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Working Visualizer Explanation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add your explanation of how the visualizer works here. You can provide details about the algorithms used, the data being visualized, and any other relevant information to help users understand how the visualizer works.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Menu;","map":{"version":3,"names":["React","Component","DiscreteSlider","SimpleSelect","SwitchLabels","InputComponent","jsxDEV","_jsxDEV","Menu","constructor","props","toggleExplanation","setState","prevState","showExplanation","isClickable","disable","cursor","state","render","className","children","onClick","style","float","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Lenovo/Desktop/AlgorithmVisualizer/src/sortComponents/menu.jsx"],"sourcesContent":["import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\nimport InputComponent from \"./InputComponent\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showExplanation: false // Add a state to toggle the explanation\r\n        };\r\n    }\r\n\r\n    toggleExplanation = () => {\r\n        this.setState(prevState => ({\r\n            showExplanation: !prevState.showExplanation\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                {/* Add a button to toggle the explanation */}\r\n                <button\r\n                    className='btn btn-info m-2'\r\n                    onClick={this.toggleExplanation}\r\n                    style={{float: 'right'}}\r\n                >\r\n                    {this.state.showExplanation ? 'Hide Explanation' : 'Show Explanation'}\r\n                </button>\r\n\r\n                {/* Render the explanation if showExplanation state is true */}\r\n                {this.state.showExplanation && (\r\n                    <div className=\"alert alert-info m-2\">\r\n                        <h4>Working Visualizer Explanation</h4>\r\n                        <p>\r\n                            Add your explanation of how the visualizer works here. You can provide details about the\r\n                            algorithms used, the data being visualized, and any other relevant information to help users\r\n                            understand how the visualizer works.\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Rest of the component's JSX */}\r\n                {/* ... */}\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    isClickable = () => {\r\n        if (this.props.disable) {\r\n            return {cursor: \"not-allowed\"};\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,cAAc,MAAM,UAAU;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,SAASP,SAAS,CAAC;EACzBQ,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAMjBC,iBAAiB,GAAG,MAAM;MACtB,IAAI,CAACC,QAAQ,CAACC,SAAS,KAAK;QACxBC,eAAe,EAAE,CAACD,SAAS,CAACC;MAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,KAgCDC,WAAW,GAAG,MAAM;MAChB,IAAI,IAAI,CAACL,KAAK,CAACM,OAAO,EAAE;QACpB,OAAO;UAACC,MAAM,EAAE;QAAa,CAAC;MAClC,CAAC,MAAM;QACH,OAAO,CAAC,CAAC;MACb;IACJ,CAAC;IA/CG,IAAI,CAACC,KAAK,GAAG;MACTJ,eAAe,EAAE,KAAK,CAAC;IAC3B,CAAC;EACL;;EAQAK,MAAMA,CAAA,EAAG;IACL,oBACIZ,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAE3Bd,OAAA;QACIa,SAAS,EAAC,kBAAkB;QAC5BE,OAAO,EAAE,IAAI,CAACX,iBAAkB;QAChCY,KAAK,EAAE;UAACC,KAAK,EAAE;QAAO,CAAE;QAAAH,QAAA,EAEvB,IAAI,CAACH,KAAK,CAACJ,eAAe,GAAG,kBAAkB,GAAG;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChE,EAGR,IAAI,CAACV,KAAK,CAACJ,eAAe,iBACvBP,OAAA;QAAKa,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACjCd,OAAA;UAAAc,QAAA,EAAI;QAA8B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACvCrB,OAAA;UAAAc,QAAA,EAAG;QAIH;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIC;EAEd;AASJ;AAEA,eAAepB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}