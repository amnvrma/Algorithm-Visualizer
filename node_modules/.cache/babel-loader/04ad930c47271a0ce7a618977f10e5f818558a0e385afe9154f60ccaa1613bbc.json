{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\AlgorithmVisualizer\\\\src\\\\sortComponents\\\\BubbleSortVisualizer.jsx\";\nimport React, { Component } from 'react';\nimport './BubbleSortVisualizer.css'; // Import CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BubbleSortVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.bubbleSort = async () => {\n      const array = this.state.array;\n      const arrayBars = document.getElementsByClassName('array-bar');\n\n      // Bubble sort algorithm\n      for (let i = 0; i < array.length - 1; i++) {\n        for (let j = 0; j < array.length - i - 1; j++) {\n          // Compare adjacent elements and swap if necessary\n          if (array[j] > array[j + 1]) {\n            // Swap elements in the array\n            let temp = array[j];\n            array[j] = array[j + 1];\n            array[j + 1] = temp;\n\n            // Swap heights of array bars for visualization\n            arrayBars[j].style.height = `${array[j]}vh`;\n            arrayBars[j + 1].style.height = `${array[j + 1]}vh`;\n\n            // Pause for a short duration to visualize the sorting process\n            await new Promise(resolve => setTimeout(resolve, 100));\n\n            // Reset heights of array bars after visualization\n            arrayBars[j].style.height = 'auto';\n            arrayBars[j + 1].style.height = 'auto';\n          }\n        }\n      }\n      this.setState({\n        array,\n        isSorting: false\n      });\n    };\n    this.randomizeArray = () => {\n      if (!this.state.isSorting) {\n        const array = Array.from({\n          length: 5\n        }, () => Math.floor(Math.random() * 40) + 10);\n        this.setState({\n          array\n        });\n      }\n    };\n    this.state = {\n      array: [5, 3, 8, 4, 2],\n      // Example array for visualization\n      isSorting: false // Flag to indicate if sorting is in progress\n    };\n  }\n\n  render() {\n    const {\n      array,\n      isSorting\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble-sort-visualizer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-container\",\n        children: array.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value}vh`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: this.randomizeArray,\n        disabled: isSorting,\n        children: \"Randomize Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success m-2\",\n        onClick: this.bubbleSort,\n        disabled: isSorting,\n        children: isSorting ? 'Sorting...' : 'Bubble Sort'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default BubbleSortVisualizer;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","BubbleSortVisualizer","constructor","props","bubbleSort","array","state","arrayBars","document","getElementsByClassName","i","length","j","temp","style","height","Promise","resolve","setTimeout","setState","isSorting","randomizeArray","Array","from","Math","floor","random","render","className","children","map","value","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled"],"sources":["C:/Users/Lenovo/Desktop/AlgorithmVisualizer/src/sortComponents/BubbleSortVisualizer.jsx"],"sourcesContent":["import React, {Component} from 'react';\r\nimport './BubbleSortVisualizer.css'; // Import CSS file for styles\r\n\r\nclass BubbleSortVisualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [5, 3, 8, 4, 2], // Example array for visualization\r\n            isSorting: false // Flag to indicate if sorting is in progress\r\n        };\r\n    }\r\n\r\n    bubbleSort = async () => {\r\n        const array = this.state.array;\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n        // Bubble sort algorithm\r\n        for (let i = 0; i < array.length - 1; i++) {\r\n            for (let j = 0; j < array.length - i - 1; j++) {\r\n                // Compare adjacent elements and swap if necessary\r\n                if (array[j] > array[j + 1]) {\r\n                    // Swap elements in the array\r\n                    let temp = array[j];\r\n                    array[j] = array[j + 1];\r\n                    array[j + 1] = temp;\r\n\r\n                    // Swap heights of array bars for visualization\r\n                    arrayBars[j].style.height = `${array[j]}vh`;\r\n                    arrayBars[j + 1].style.height = `${array[j + 1]}vh`;\r\n\r\n                    // Pause for a short duration to visualize the sorting process\r\n                    await new Promise(resolve => setTimeout(resolve, 100));\r\n\r\n                    // Reset heights of array bars after visualization\r\n                    arrayBars[j].style.height = 'auto';\r\n                    arrayBars[j + 1].style.height = 'auto';\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({array, isSorting: false});\r\n    }\r\n\r\n    randomizeArray = () => {\r\n        if (!this.state.isSorting) {\r\n            const array = Array.from({length: 5}, () => Math.floor(Math.random() * 40) + 10);\r\n            this.setState({array});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {array, isSorting} = this.state;\r\n\r\n        return (\r\n            <div className=\"bubble-sort-visualizer\">\r\n                <div className=\"array-container\">\r\n                    {/* Render array bars with heights proportional to array values */}\r\n                    {array.map((value, index) => (\r\n                        <div\r\n                            className=\"array-bar\"\r\n                            key={index}\r\n                            style={{height: `${value}vh`}}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <button\r\n                    className=\"btn btn-primary m-2\"\r\n                    onClick={this.randomizeArray}\r\n                    disabled={isSorting}\r\n                >\r\n                    Randomize Array\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-success m-2\"\r\n                    onClick={this.bubbleSort}\r\n                    disabled={isSorting}\r\n                >\r\n                    {isSorting ? 'Sorting...' : 'Bubble Sort'}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BubbleSortVisualizer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}